diff --git a/node_modules/@types/jsrsasign/modules/RSAKey.d.ts b/node_modules/@types/jsrsasign/modules/RSAKey.d.ts
index 35588c3..09c9394 100644
--- a/node_modules/@types/jsrsasign/modules/RSAKey.d.ts
+++ b/node_modules/@types/jsrsasign/modules/RSAKey.d.ts
@@ -63,7 +63,7 @@ declare namespace jsrsasign {
          * @param hashAlg hash algorithm name for signing.
          * @return returns hexadecimal string of signature value.
          */
-        static sign(s: string, hashAlg: string): string;
+        sign(s: string, hashAlg: string): string;
 
         /**
          * sign for a message string with RSA private key by PKCS#1 PSS signing.
@@ -78,7 +78,7 @@ declare namespace jsrsasign {
          *        DEFAULT is -1. (NOTE: OpenSSL's default is -2.)
          * @return returns hexadecimal string of signature value.
          */
-        static signPSS(s: string, hashAlg: string, sLen: number): string;
+        signPSS(s: string, hashAlg: string, sLen: number): string;
 
         /**
          * sign hash value of message to be signed with RSA private key.
@@ -86,7 +86,7 @@ declare namespace jsrsasign {
          * @param hashAlg hash algorithm name for signing.
          * @return returns hexadecimal string of signature value.
          */
-        static signWithMessageHash(sHashHex: string, hashAlg: string): string;
+        signWithMessageHash(sHashHex: string, hashAlg: string): string;
 
         /**
          * sign hash value of message with RSA private key by PKCS#1 PSS signing.
@@ -101,7 +101,7 @@ declare namespace jsrsasign {
          *        DEFAULT is -1. (NOTE: OpenSSL's default is -2.)
          * @return returns hexadecimal string of signature value.
          */
-        static signWithMessageHashPSS(hHash: string, hashAlg: string, sLen: number): string;
+        signWithMessageHashPSS(hHash: string, hashAlg: string, sLen: number): string;
 
         /**
          * verifies a sigature for a message string with RSA public key.
@@ -126,7 +126,7 @@ declare namespace jsrsasign {
          *        DEFAULT is -1. (NOTE: OpenSSL's default is -2.)
          * @return returns true if valid, otherwise false
          */
-        static verifyPSS(sMsg: string, hSig: string, hashAlg: string, sLen: number): boolean;
+        verifyPSS(sMsg: string, hSig: string, hashAlg: string, sLen: number): boolean;
 
         /**
          * verifies a sigature for a message string with RSA public key.
@@ -135,7 +135,7 @@ declare namespace jsrsasign {
          *                 non-hexadecimal charactors including new lines will be ignored.
          * @return returns 1 if valid, otherwise 0
          */
-        static verifyWithMessageHash(sHashHex: string, hSig: string): 0 | 1;
+        verifyWithMessageHash(sHashHex: string, hSig: string): 0 | 1;
 
         /**
          * verifies a sigature for a hash value of message string with RSA public key by PKCS#1 PSS sign.
@@ -151,6 +151,6 @@ declare namespace jsrsasign {
          *        DEFAULT is -1 (NOTE: OpenSSL's default is -2.)
          * @return returns true if valid, otherwise false
          */
-        static verifyWithMessageHashPSS(hHash: string, hSig: string, hashAlg: string, sLen: number): boolean;
+        verifyWithMessageHashPSS(hHash: string, hSig: string, hashAlg: string, sLen: number): boolean;
     }
 }
